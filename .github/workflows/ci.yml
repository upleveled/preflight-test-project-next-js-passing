name: CI
on: push

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      PGHOST: localhost
      PGDATABASE: preflight_test_project_next_js_passing
      PGUSERNAME: preflight_test_project_next_js_passing
      PGPASSWORD: preflight_test_project_next_js_passing
    steps:
      - run: echo "$(pg_config --bindir)" >> $GITHUB_PATH
      - name: Start preinstalled PostgreSQL on Ubuntu
        run: |
          # echo "$(pg_config --bindir)" >> $GITHUB_PATH
          export PGDATA="$RUNNER_TEMP/pgdata"
          mkdir -p "$PGDATA"
          initdb -D "$PGDATA"
          sudo -u postgres "$(pg_config --bindir)/pg_ctl" start
          # sudo systemctl start postgresql.service
          # pg_isready
      - name: Create database user
        run: |
          sudo -u postgres psql --command="CREATE USER $PGUSERNAME PASSWORD '$PGPASSWORD'" --command="\du"
      - name: Create database and allow user
        run: |
          sudo -u postgres createdb --owner=$PGUSERNAME $PGDATABASE
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v3
        with:
          version: 'latest'

      # Use the official setup-node action (sets up Node.js):
      # https://github.com/actions/setup-node
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install
      - run: pnpm migrate up
      # Also generates next-env.d.ts, required for tsc
      - name: Build Next.js app
        run: pnpm build
      - name: Run TypeScript Compiler
        run: pnpm tsc
      - name: Run ESLint
        run: pnpm eslint . --max-warnings 0
      - name: Run Stylelint
        run: pnpm stylelint '**/*.{css,scss,less,js,tsx}'
      - name: Install and run Preflight
        run: |
          pnpm add --global @upleveled/preflight
          preflight
